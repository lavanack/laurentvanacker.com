
instance of nxPackage as $nxPackage1ref
{
Ensure = "Present";
 SourceInfo = "C:\\Users\\lavanack\\OneDrive - Microsoft\\Source Control\\GitHub\\laurentvanacker.com\\Azure\\Desired State Configuration\\Azure Automanage Machine Configuration\\Linux\\ExampleConfiguration.ps1::13::9::nxPackage";
 Name = "nginx";
 ModuleName = "nxtools";
 ResourceID = "[nxPackage]nginx";
 ModuleVersion = "1.4.0";
 ConfigurationName = "ExampleConfiguration";
};

instance of nxPackage as $nxPackage2ref
{
Ensure = "Present";
 SourceInfo = "C:\\Users\\lavanack\\OneDrive - Microsoft\\Source Control\\GitHub\\laurentvanacker.com\\Azure\\Desired State Configuration\\Azure Automanage Machine Configuration\\Linux\\ExampleConfiguration.ps1::17::9::nxPackage";
 Name = "hello";
 ModuleName = "nxtools";
 ResourceID = "[nxPackage]hello";
 ModuleVersion = "1.4.0";
 ConfigurationName = "ExampleConfiguration";
};

instance of nxFile as $nxFile1ref
{
Ensure = "Present";
 SourceInfo = "C:\\Users\\lavanack\\OneDrive - Microsoft\\Source Control\\GitHub\\laurentvanacker.com\\Azure\\Desired State Configuration\\Azure Automanage Machine Configuration\\Linux\\ExampleConfiguration.ps1::21::9::nxFile";
 Contents = "Hello Arc!";
 DestinationPath = "/tmp/arc-demo";
 ModuleName = "nxtools";
 Owner = "root";
 Mode = "0777";
 ResourceID = "[nxFile]demofile1";
 Group = "root";
 ModuleVersion = "1.4.0";
 ConfigurationName = "ExampleConfiguration";
};

instance of nxGroup as $nxGroup1ref
{
Ensure = "Present";
 SourceInfo = "C:\\Users\\lavanack\\OneDrive - Microsoft\\Source Control\\GitHub\\laurentvanacker.com\\Azure\\Desired State Configuration\\Azure Automanage Machine Configuration\\Linux\\ExampleConfiguration.ps1::29::9::nxGroup";
 ModuleName = "nxtools";
 GroupName = "arcusers";
 ResourceID = "[nxGroup]arcusers";
 ModuleVersion = "1.4.0";
 ConfigurationName = "ExampleConfiguration";
};

instance of nxScript as $nxScript1ref
{
SetScript = "$FileContent ='Hello Arc!'\n$FilePath ='/tmp/arc-nxscript-demo'\n\n                $null = Set-Content -Path $FilePath -Value $FileContent\n            ";
 SourceInfo = "C:\\Users\\lavanack\\OneDrive - Microsoft\\Source Control\\GitHub\\laurentvanacker.com\\Azure\\Desired State Configuration\\Azure Automanage Machine Configuration\\Linux\\ExampleConfiguration.ps1::33::9::nxScript";
 GetScript = "$FileContent ='Hello Arc!'\n$FilePath ='/tmp/arc-nxscript-demo'\n\n                $Reason = [Reason]::new()\n                $Reason.Code = \"Script:Script:FileMissing\"\n                $Reason.Phrase = \"File does not exist\"\n\n                if (Test-Path -Path $FilePath) {\n                    $text = $(Get-Content -Path $FilePath -Raw).Trim()\n                    if ($text -eq $FileContent) {\n                        $Reason.Code = \"Script:Script:Success\"\n                        $Reason.Phrase = \"File exists with correct content\"\n                    }\n                    else {\n                        $Reason.Code = \"Script:Script:ContentMissing\"\n                        $Reason.Phrase = \"File exists but has incorrect content\"\n                    }\n                }\n\n                return @{\n                    Reasons = @($Reason)\n                }\n            ";
 ModuleName = "nxtools";
 ResourceID = "[nxScript]demofile2";
 TestScript = "$FileContent ='Hello Arc!'\n$FilePath ='/tmp/arc-nxscript-demo'\n\n                if (Test-Path -Path $FilePath) {\n                    $text = $(Get-Content -Path $FilePath -Raw).Trim()\n                    return $text -eq $FileContent\n                }\n                else {\n                    return $false\n                }\n            ";
 ModuleVersion = "1.4.0";
 ConfigurationName = "ExampleConfiguration";
};

instance of OMI_ConfigurationDocument
{
 Version="2.0.0";
 MinimumCompatibleVersion = "1.0.0";
 CompatibleVersionAdditionalProperties= {"Omi_BaseResource:ConfigurationName"};
 Name="ExampleConfiguration";
};
